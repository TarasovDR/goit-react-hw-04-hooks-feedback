{"version":3,"sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["VoteButton","Button","type","onClick","name","children","FeedbackOptions","options","onLeaveFeedback","map","option","Notification","message","SectionTitle","Title","text","defaultProps","Wrapper","Section","MarkList","MarkItem","Statistics","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","feedbacks","isFeedback","optionsKeys","Object","keys","countTotalFeedback","values","reduce","acc","value","e","target","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAEO,IAAMA,EAAU,6hB,OCmBRC,EAhBA,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,SACpC,OACE,cAACL,EAAD,CAAYE,KAAMA,EAAMC,QAASA,EAASC,KAAMA,EAAhD,SAIGC,KCgBQC,EAxBS,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjC,OACE,mCACCD,EAAQE,KAAI,SAAAC,GACX,OACA,cAAC,EAAD,CAEER,KAAK,SACLC,QAASK,EACTJ,KAAMM,EAJR,SAMGA,GALIA,SCGEC,EAVM,SAAC,GAAc,IAAbC,EAAY,EAAZA,QACrB,OACE,4BAAIA,KCFD,IAAMC,EAAY,gICCnBC,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OAAO,cAACF,EAAD,UAAeE,KAGxBD,EAAME,aAAe,CACnBD,KAAM,IAOOD,QCbR,IAAMG,EAAO,+LCULC,EATC,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,KAAMV,EAAe,EAAfA,SACvB,OACE,eAACY,EAAD,WACGF,GAAQ,cAAC,EAAD,CAAOA,KAAMA,IACrBV,MCLA,IAAMc,EAAQ,+LAaRC,EAAQ,0CCYNC,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACA,eAACP,EAAD,WACE,eAACC,EAAD,oBAAiBE,KACjB,eAACF,EAAD,uBAAoBG,KACpB,eAACH,EAAD,mBAAgBI,QAElB,eAACL,EAAD,WACE,eAACC,EAAD,qBAAkBK,KAClB,eAACL,EAAD,iCAA8BE,GAAQI,EAAtC,eCNS,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAEMC,EAAY,CAAEV,OAAMC,UAASC,OAC7BS,EAAaX,GAAQC,GAAWC,EAChCU,EAAcC,OAAOC,KAAKJ,GAmB1BK,EAAqB,WAEzB,OADsBF,OAAOG,OAAON,GACfO,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAO3D,OACE,qCACE,cAAC,EAAD,CAAS1B,KAAK,wBAAd,SACE,cAAC,EAAD,CAAiBR,QAAS2B,EAAa1B,gBA7BzB,SAAAkC,GAElB,OADgBA,EAAEC,OAAOvC,MAEvB,IAAK,OACHyB,GAAQ,SAAAe,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHd,GAAW,SAAAc,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHb,GAAO,SAAAa,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aAkBF,cAAC,EAAD,CAAS7B,KAAK,aAAd,SACGkB,EACC,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,IACPX,mBAfDmB,KAAKC,MAAOxB,EAAOe,IAAwB,OAkB5C,cAAC,EAAD,CAAczB,QAAQ,2BCpDhCmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtB,EAAD,MAEFuB,SAASC,eAAe,W","file":"static/js/main.0c0bb26f.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\r\n\r\nexport const VoteButton = styled.button`\r\n  padding: 10px 20px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  background: radial-gradient(#fff, #cacaca);\r\n  border: none;\r\n  border-radius: 5px;\r\n\r\n  font-size: 1.4rem;\r\n  \r\n  &:not(:last-child){\r\n    margin-right: 10px;\r\n  }\r\n  &:nth-of-type(1):hover{\r\n    background: radial-gradient(#beffdb, #cacaca);\r\n  }\r\n  &:nth-of-type(2):hover{\r\n    background: radial-gradient(#f3ffbe, #cacaca);\r\n  }\r\n  &:nth-of-type(3):hover{\r\n    background: radial-gradient(#ffbebe, #cacaca);\r\n  }\r\n  &:active{\r\n    transform: scale(0.95);\r\n  }\r\n  \r\n  & svg {\r\n    margin-right: 10px;\r\n    \r\n    &:checked{\r\n      color: green;\r\n    }\r\n  }\r\n  `","import PropTypes from 'prop-types';\r\nimport { VoteButton } from './Button.styled';\r\n// import {AiFillLike, AiFillDislike } from 'react-icons/ai';\r\n// import {RiEmotionNormalLine} from 'react-icons/ri';\r\n\r\nconst Button = ({type, onClick, name, children}) =>{\r\n  return(\r\n    <VoteButton type={type} onClick={onClick} name={name}>\r\n      {/* {name==='good' && <AiFillLike name=\"good\" />}\r\n      {name==='neutral' && <RiEmotionNormalLine name=\"neutral\"/>}\r\n      {name==='bad' && <AiFillDislike name=\"bad\"/>} */}\r\n      {children}</VoteButton>\r\n  )\r\n}\r\n\r\nButton.propTypes={\r\n  type: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Button;","import PropTypes from 'prop-types';\r\nimport Button from 'components/Button';\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback})=>{\r\n  return(\r\n    <>\r\n    {options.map(option =>{\r\n      return (\r\n      <Button\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name={option}\r\n      >\r\n        {option}\r\n        </Button>\r\n    )})      \r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes={\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message}) =>{\r\n  return (\r\n    <p>{message}</p>\r\n  )\r\n};\r\n\r\n\r\nNotification.propTypes={\r\n  message: PropTypes.string,\r\n}\r\nexport default Notification;","import styled from '@emotion/styled/macro';\n\nexport const SectionTitle = styled.h2`\n  padding-bottom: 26px;\n  font-size: 2rem;\n  font-weight: 600;\n  color: black;\n`\n","import PropTypes from 'prop-types';\nimport { SectionTitle } from './Title.styled';\n\nconst Title = ({ text }) => {\n  return <SectionTitle>{text}</SectionTitle>;\n};\n\nTitle.defaultProps = {\n  text: '',\n};\n\nTitle.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Title;\n","import styled from \"@emotion/styled/macro\";\n\nexport const Wrapper = styled.section`\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin: 0 auto;\n  text-align: center;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`","import Title from 'components/Title/Title';\nimport { Wrapper } from './Section.styled';\n\nconst Section = ({ text, children }) => {\n  return (\n    <Wrapper>\n      {text && <Title text={text} />}\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default Section;\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const MarkList = styled.ul`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nmargin: 0 auto;\r\nwidth: 350px;\r\nfont-size: 1.3rem;\r\n\r\n\r\n&:not(:last-child) {\r\nmargin-bottom: 20px;\r\n}\r\n`\r\n\r\nexport const MarkItem = styled.li`\r\n/* &:not(:last-child) {\r\n\r\n} */\r\n`","import PropTypes from 'prop-types';\r\nimport { MarkList, MarkItem } from './Statistics.styled';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return(\r\n    <>\r\n    <MarkList>\r\n      <MarkItem>Good: {good}</MarkItem>\r\n      <MarkItem>Neutral: {neutral}</MarkItem>\r\n      <MarkItem>Bad: {bad}</MarkItem>\r\n    </MarkList>\r\n    <MarkList>\r\n      <MarkItem>Total: {total}</MarkItem>\r\n      <MarkItem>Positive feedback: {good && positivePercentage} %</MarkItem>\r\n    </MarkList>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes={\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n}\r\n\r\nexport default Statistics;","import React, { useState } from 'react';\n\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Notification from 'components/Notification';\nimport Section from 'components/Section';\nimport Statistics from 'components/Statistics';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const feedbacks = { good, neutral, bad };\n  const isFeedback = good || neutral || bad;\n  const optionsKeys = Object.keys(feedbacks);\n\n  const handleClick = e => {\n    const btnName = e.target.name;\n    switch (btnName) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const optionsValues = Object.values(feedbacks);\n    return optionsValues.reduce((acc, value) => acc + value, 0);\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <>\n      <Section text=\"Please leave feedback\">\n        <FeedbackOptions options={optionsKeys} onLeaveFeedback={handleClick} />\n      </Section>\n      <Section text=\"Statistics\">\n        {isFeedback ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}